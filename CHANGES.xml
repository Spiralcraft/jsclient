<scm:Change.list
  xmlns:scm="class:/spiralcraft/scm/meta/"
  >
  <scm:Change>
    <revision>0.4.17
    </revision>

    <authorId>miketoth
    </authorId>
    
    <date>
    </date>
    
    <detail>
    
      <scm:Change>
      
        <revision>-dev38
        </revision>
        
        <notes>
          <scm:Note>Use absolute path for project root to avoid bugs in 
                 @rollup/plugin-node-resolve
          </scm:Note>
        </notes>
        
        <path>package/lib-js/spiralcraft/rollup-vfs/rollup-vfs.js
        </path>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev37
        </revision>
        
        <notes>
          <scm:Note>Added standard root dir src-js/lib to rollup-vs search and
            provided for customization of the path in src-js that will be searched
            first.
          </scm:Note>
        </notes>
        
        <path>package/lib-js/spiralcraft/rollup-vfs/rollup-vfs.js
        </path>
        
      </scm:Change>
      <scm:Change>
      
        <revision>-dev36
        </revision>
        
        <notes>
          <scm:Note>Added trace option to log HTTP request readystate changes
          </scm:Note>
        </notes>
        
        <path>package/war-js/spiralcraft.js
        </path>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev35
        </revision>
        
        <notes>
          <scm:Note>Function to count array elements that match a lambda filter
          </scm:Note>
        </notes>
        
        <path>package/lib-js/spiralcraft/util/count.js
        </path>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev34
        </revision>
        
        <notes>
          <scm:Note>Bidirectional data binding toolkit with pub-sub support
          </scm:Note>
        </notes>
        
        <path>package/lib-js/spiralcraft/lang/expressions.js
        </path>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev34
        </revision>
        
        <notes>
          <scm:Note>Utility to compute luminosity of colors for background matching
          </scm:Note>
        </notes>
        
        <path>package
        </path>
        
        <resources>
          <URI>lib-js/spiralcraft/util/color.js
          </URI>
        </resources>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev34
        </revision>
        
        <notes>
          <scm:Note>Modularized session watchdog for SPAs with error handling
          </scm:Note>
        </notes>
        
        <path>package
        </path>
        
        <resources>
          <URI>lib-js/spiralcraft/webui/sessionWatchdog.js
          </URI>
          <URI>war-js/spiralcraft.js
          </URI>
        </resources>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev34
        </revision>
        
        <notes>
          <scm:Note>Added basic infrastructure to bind ui components to data ops
          </scm:Note>
        </notes>
        
        <path>package/lib-js/spiralcraft/data
        </path>
        
        <resources>
          <URI>dataControllerContext.js
          </URI>
          <URI>genericCRUDView.js
          </URI>
        </resources>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev33
        </revision>
        
        <notes>
          <scm:Note>Allow VFS packages to remap to default resolver
          </scm:Note>
        </notes>
        
        <path>package/lib-js/spiralcraft/rollup-vfs/rollup-vfs.js
        </path>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev32
        </revision>
        
        <notes>
          <scm:Note>Module resolution plugin for rollup.js that uses VFS concept
          </scm:Note>
        </notes>
        
        <path>package/lib-js/spiralcraft/rollup-vfs/rollup-vfs.js
        </path>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev32
        </revision>
        
        <notes>
          <scm:Note>Factored some password encryption logic to consider SHA rounds
          </scm:Note>
        </notes>
        
        <path>package/war-js
        </path>
        
        <resources>
          <URI>spiralcraft.js
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
      
        <revision>-dev31
        </revision>
        
        <notes>
          <scm:Note>Added SPIRALCRAFT.sanitize module for text sanitization
          </scm:Note>
        </notes>
        
        <path>package/war-js
        </path>
        
        <resources>
          <URI>spiralcraft.js
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
      
        <revision>-dev30
        </revision>
        
        <notes>
          <scm:Note>Properly bind checkbox input to boolean control
          </scm:Note>
        </notes>
        
        <path>package/war-js
        </path>
        
        <resources>
          <URI>spiralcraft.js
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
      
        <revision>-dev30
        </revision>
        
        <notes>
          <scm:Note>Support asynchronous rule validation
          </scm:Note>
        </notes>
        
        <path>package/war-js
        </path>
        
        <resources>
          <URI>app.js
          </URI>
          <URI>spiralcraft.js
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
      
        <revision>-dev29
        </revision>
        
        <notes>
          <scm:Note>Input Validation at all stages uses value contained in control
            and not value contained in model.
          </scm:Note>
          <scm:Note>Add "enter" validation stage to for rules to run when entering
            a field.
          </scm:Note>
          <scm:Note>Add shorthand mechanism ($ and $$ properties) in object literals
            when using object literal descriptors to configure components and other
            infrastructure.
          </scm:Note>
          <scm:Note>Enhanced SC.copy function to support deep copying. 
          </scm:Note>
        </notes>
        
        <path>package/war-js
        </path>
        
        <resources>
          <URI>app.js
          </URI>
          <URI>spiralcraft.js
          </URI>
        </resources>
      </scm:Change>


      <scm:Change>
      
        <revision>-dev28
        </revision>
        
        <notes>
          <scm:Note>Use a css class to control hiding vs. element.style
          </scm:Note>
        </notes>
        <path>source/spiralcraft/package/war-js/spiralcraft.js
        </path>
      </scm:Change>

      <scm:Change>
      
        <revision>-dev28
        </revision>
        
        <notes>
          <scm:Note>Trigger validation when leaving field
          </scm:Note>
        </notes>
        <path>source/spiralcraft/package/war-js/app.js
        </path>
      </scm:Change>

      <scm:Change>
      
        <revision>-dev27
        </revision>
        
        <notes>
          <scm:Note>Map common functions to $SC well known name to reduce verbosity
          </scm:Note>
          <scm:Note>Allow functions to be registered as observers while still allowing
            listener objects.
          </scm:Note>
          <scm:Note>Integrate Channels into DataBindings as a generic get/set
            interface.
          </scm:Note>
          <scm:Note>Add framework method postInit() to notify Views when all children
            have been initialized.
          </scm:Note>
          <scm:Note>Encapsulate Sha256 functions due to namespace collisions with
            unknown third party libraries
          </scm:Note>
          <scm:Note>Adornments deal with various aspects of views, e.g. controlling
            specific attributes or css classes based on computed information.
          </scm:Note>
          <scm:Note>Enhanced model resolution flexibility via modelFn config 
            property which permits deferral of model resolution to init phase.
          </scm:Note>
          <scm:Note>Enhanced templating options by providing htmlContentFn and
            textContentFn config elements in basic View to support basic value 
            output and adding a Template view to support literal markup templating.
          </scm:Note>
          <scm:Note>Sub-framework to support form controls and multi-stage validation
            using input groups, validation rules and action containers.
          </scm:Note>
        </notes>
        
        <path>package/war-js
        </path>
        
        <resources>
          <URI>app.js
          </URI>
          <URI>spiralcraft.js
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
      
        <revision>-dev26
        </revision>
        
        <notes>
          <scm:Note>Added find(array,fn) function
          </scm:Note>
          <scm:Note>Moved dynamic visibility check into refresh() function
          </scm:Note>
        </notes>
        
        <path>package/
        </path>
        
        <resources>
          <URI>war-js/app.js
          </URI>
          <URI>war-js/spiralcraft.js
          </URI>
        </resources>
      </scm:Change>
      <scm:Change>
      
        <revision>-dev25
        </revision>
        
        <notes>
          <scm:Note>Error reporting enhancements
          </scm:Note>
          <scm:Note>Added map(array,fn) function
          </scm:Note>
        </notes>
        
        <path>package/
        </path>
        
        <resources>
          <URI>war-js/app.js
          </URI>
          <URI>war-js/spiralcraft.js
          </URI>
        </resources>
      </scm:Change>
      
      <scm:Change>
      
        <revision>-dev23
        </revision>
        
        <notes>
          <scm:Note>View logic to dynamically control visibility
          </scm:Note>
          <scm:Note>Class initializer function in SC.extend mechanism to simplify
            view factory registration.
          </scm:Note>
          <scm:Note>Peer.parentView resolves parent view in hierarchy.
          </scm:Note>
          <scm:Note>Channel construct for Views to bind to abstracted data locations
            as their model reference.
          </scm:Note>
          <scm:Note>Factor focus events and template rendering into the base View
            class.
          </scm:Note>
          <scm:Note>Garbage collect peers that are dynamically generated
          </scm:Note>
        </notes>
        
        <path>package/
        </path>
        
        <resources>
          <URI>war-js/app.js
          </URI>
          <URI>war-js/spiralcraft.js
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
      
        <revision>-dev22
        </revision>
        
        <notes>
          <scm:Note>StateMachine canEnter / canExit logic to enforce preconditions
          </scm:Note>
          <scm:Note>overridable init method invoked by framework after construction
          </scm:Note>
          <scm:Note>BoundInput control
          </scm:Note>
        </notes>
        
        <path>package/
        </path>
        
        <resources>
          <URI>war-js/app.js
          </URI>
          <URI>war-js/spiralcraft.js
          </URI>
        </resources>
      </scm:Change>

      <scm:Change>
      
        <revision>-dev21
        </revision>
        
        <notes>
          <scm:Note>Event dispatch and registration facility in new Component class
          </scm:Note>
        </notes>
        
        <path>package/
        </path>
        
        <resources>
          <URI>war-js/app.js
          </URI>
          <URI>war-js/spiralcraft.js
          </URI>
        </resources>
      </scm:Change>
      
      <scm:Change>
      
        <revision>-dev20
        </revision>
        
        <notes>
          <scm:Note>Support Iterator nesting
          </scm:Note>
          <scm:Note>Support referenced templates.
          </scm:Note>
          <scm:Note>Support target zone for iteration rendering via comments
          </scm:Note>
          <scm:Note>Template default data parameter is "_" ie. "_.name"
          </scm:Note>
          <scm:Note>Added view initializer
          </scm:Note>
          <scm:Note>Methods in Peer object to add and remove element css classes
          </scm:Note>
        </notes>
        
        <path>package/
        </path>
        
        <resources>
          <URI>war-js/app.js
          </URI>
          <URI>war-js/spiralcraft.js
          </URI>
          <URI>war-js/template.js
          </URI>
          <URI>war-webui/slide-controller.tgl
          </URI>
        </resources>
      </scm:Change>  
    
      <scm:Change>
      
        <revision>-dev19
        </revision>
        
        <notes>
          <scm:Note>Usability updates for Iterator component 
          </scm:Note>
          <scm:Note>Fix bracket matching logic in Template component 
          </scm:Note>
          <scm:Note>Support passing additional options to js client when using
            the js-app webui component.
          </scm:Note>
        </notes>
        
        <path>package/
        </path>
        
        <resources>
          <URI>war-js/app.js
          </URI>
          <URI>war-js/spiralcraft.js
          </URI>
          <URI>war-js/template.js
          </URI>
          <URI>war-webui/js-app.tgl
          </URI>
        </resources>
      </scm:Change>  

      <scm:Change>
      
        <revision>-dev18
        </revision>
        
        <notes>
          <scm:Note>Various View components to implement a basic state-machine 
            driven router that can page between multiple views in an an app.
          </scm:Note>
          <scm:Note>"sc-view" attributes on elements for setting up view logic using
            JS object literals via dynamic execution
          </scm:Note>
          <scm:Note>$SC.init(conf) accepts configuration object conf to turn on
            various settings including session sync and full-DOM scan on load for
            framework attributes.
          </scm:Note>
          <scm:Note>New js file for client-side framework
          </scm:Note>
          <scm:Note>Use 3rd party console.log polyfill to regain line number reporting
          </scm:Note>
          <scm:Note>Add SPIRALCRAFT.extend prototype chaining utility function to facilitate
            inheritance.
          </scm:Note>
          <scm:Note>Add templating engine to generate markup / component expansions
            from data
          </scm:Note>
          <scm:Note>Make slide-controller a reusable component
          </scm:Note>
        </notes>
                
        <path>package/war-js/
        </path>
        
        <resources>
          <URI>app.js
          </URI>
          <URI>spiralcraft.js
          </URI>
          <URI>json6.js
          </URI>
        </resources>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev18
        </revision>
        
        <notes>
          <scm:Note>Utility functions to shorthand essential functionality
            in $SC object.
          </scm:Note>
          <scm:Note>DOM traversal utility
          </scm:Note>
        </notes>
                
        <path>package/war-js/spiralcraft.js
        </path>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev18
        </revision>
        
        <notes>
          <scm:Note>Remove obsolete files
          </scm:Note>
        </notes>
                
        <path>package/war-js
        </path>
        
        <resources>
          <URI>spiralcraft-jquery.js
          </URI>
          <URI>spiralcraft-anytime.js
          </URI>
        </resources>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev18
        </revision>
        
        <notes>
          <scm:Note>Begin implementation of templating functionality
          </scm:Note>
        </notes>
                
        <path>package/war-js/template.js
        </path>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev17
        </revision>
        
        <notes>
          <scm:Note>Accept JSON.stringify parameters to pretty-print JSON
            objects 
          </scm:Note>
          <scm:Note>Accept JSON.parse parameter for reviver object
          </scm:Note>
        </notes>
                
        <path>package/war-js/spiralcraft.js
        </path>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev16
        </revision>
        
        <notes>
          <scm:Note>Added SPIRALCRAFT.http.configureXHR function which can be
            overridden to configure the XmlHttpRequest object.
          </scm:Note>
        </notes>
                
        <path>package/war-js/spiralcraft.js
        </path>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev16
        </revision>
        
        <notes>
          <scm:Note>Add data binding functionality to connect DOM elements to
            data in peer objects associated with containing elements.
          </scm:Note>
        </notes>
                
        <path>package/war-js/spiralcraft.js
        </path>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev15
        </revision>
        
        <notes>
          <scm:Note>Complete challenge-response challenge hashing functionality
          </scm:Note>
        </notes>
                
        <path>package/war-js/spiralcraft.js
        </path>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev14
        </revision>
        
        
        <notes>
          <scm:Note>Allow use of FormData object in calls to methods that
            post forms in order to support async file uploads.
          </scm:Note>
          <scm:Note>Gracefully handle conditions where AJAX interactions
            encounter expired sessions
          </scm:Note>
        </notes>
        
        <path>package/war-js/spiralcraft.js
        </path>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev12
        </revision>
        
        
        <notes>
          <scm:Note>Fix error when calling console.log after developer tools
            have started on IE
          </scm:Note>
        </notes>
        
        <path>package/war-webui/spiralcraft-jsclient.tgl
        </path>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev11
        </revision>
        
        
        <notes>
          <scm:Note>Fix error when calling nonexistent console.log
          </scm:Note>
        </notes>
        
        <path>package/war-webui/spiralcraft-jsclient.tgl
        </path>
        
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev10
        </revision>
        
        
        <notes>
          <scm:Note>Add functionality to chain handlers onto dom element events
          </scm:Note>
          <scm:Note>Add DOM upward traversal functionality to find nearest
            parent with specified name/class/id
          </scm:Note>
          <scm:Note>Add functionality to set the fragment of a button's 
            parent form action when the button is pressed.
          </scm:Note>
        </notes>
        
        <path>package/war-webui/spiralcraft-jsclient.tgl
        </path>
        
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev9
        </revision>
        
        
        <notes>
          <scm:Note>Add keepalive parameter to jsclient init
          </scm:Note>
        </notes>
        
        <path>package/war-webui/spiralcraft-jsclient.tgl
        </path>
        
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev8
        </revision>
        
        
        <notes>
          <scm:Note>Simplify interaction with server-side Ports using
            the Port javascript object.
          </scm:Note>
        </notes>
        
        <path>package/war-js/spiralcraft.js
        </path>
        
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev7
        </revision>
        
        
        <notes>
          <scm:Note>Don't confuse "false" with an undefined value in AJAX
            form posts
          </scm:Note>
          <scm:Note>Use OOP and automatic registration to simplify the
            association of peers with DOM elements.
          </scm:Note>
        </notes>
        
        <path>package/war-js/spiralcraft.js
        </path>
        
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev6
        </revision>
        
        
        <notes>
          <scm:Note>Don't include undefined properties in AJAX form posts
          </scm:Note>
        </notes>
        
        <path>package/war-js/spiralcraft.js
        </path>
        
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev5
        </revision>
        
        
        <notes>
          <scm:Note>Clean up body on-load logic
          </scm:Note>
        </notes>
        
        <path>package/war-js/spiralcraft.js
        </path>
        
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev4
        </revision>
        
        
        <notes>
          <scm:Note>Make body on load intercept more reliable
          </scm:Note>
        </notes>
        
        <path>package/war-js/spiralcraft.js
        </path>
        
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev3
        </revision>
        
        
        <notes>
          <scm:Note>Add support for ajax form post
          </scm:Note>
        </notes>
        
        <path>package/war-js/spiralcraft.js
        </path>
        
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev2
        </revision>
        
        
        <notes>
          <scm:Note>Added webui event system
          </scm:Note>
          <scm:Note>Fix context using js "call" in several places.
          </scm:Note>
          <scm:Note>Added wrapper for JSON.parse, JSON.stringify functionality.
          </scm:Note>
        </notes>
        
        <path>package/war-js/spiralcraft.js
        </path>
        
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev1
        </revision>
        
        
        <notes>
          <scm:Note>Use script tag to provide compatibility with new Page
            object.
          </scm:Note>
        </notes>
        
        <path>package
        </path>
        
        <resources>
          <URI>war-webui/spiralcraft-jsclient.tgl
          </URI>
        </resources>
        
      </scm:Change>

      <scm:Change>
      
        <revision>-dev1
        </revision>
        
        
        <notes>
          <scm:Note>Add facility for registering client-side bindings for
            server-side controls.
          </scm:Note>
          <scm:Note>Internal refactoring- changed "my" variable to "self".
            "self" will be used to supply object context to js 
            functions by convention.
          </scm:Note>
        
        </notes>
        
        <path>package
        </path>
        
        <resources>
          <URI>war-js/spiralcraft.js
          </URI>
        </resources>
        
      </scm:Change>
    </detail>
  </scm:Change>


  <scm:Change>
    <revision>0.4.16
    </revision>

    <authorId>miketoth
    </authorId>
    
    <date>
    </date>
    
    <detail>
      <scm:Change>
      
        <revision>-dev1
        </revision>
        
        
        <notes>
          <scm:Note>Replaced SHA-256 implementation with one that doesn't
            break in Safari
          </scm:Note>
        
        </notes>
        
        <path>package
        </path>
        
        <resources>
          <URI>war-js/spiralcraft.js
          </URI>
        </resources>
        
      </scm:Change>
    </detail>
  </scm:Change>

  <scm:Change>
    <revision>0.4.15.2
    </revision>

    <authorId>miketoth
    </authorId>
    
    <date>2011-12-15
    </date>
    
    <detail>
      <scm:Change>
        
        <notes>
          <scm:Note>Replaced SHA-256 implementation with one that doesn't
            break in Safari
          </scm:Note>
        
        </notes>
        
        <path>package
        </path>
        
        <resources>
          <URI>war-js/spiralcraft.js
          </URI>
        </resources>
        
      </scm:Change>
    </detail>
  </scm:Change>
  
  <scm:Change>
    <revision>0.4.15.1
    </revision>

    <authorId>miketoth
    </authorId>
    
    <date>2011-09-15
    </date>
    
    <detail>
      <scm:Change>
      
        <revision>-dev2
        </revision>
        
        
        <notes>
          <scm:Note>Remove extraneous logging
          </scm:Note>
        
        </notes>
        
        <path>package
        </path>
        
        <resources>
          <URI>war-js/spiralcraft.js
          </URI>
        </resources>
        
      </scm:Change>
      
      <scm:Change>
      
        <revision>-dev1
        </revision>
        
        
        <notes>
          <scm:Note>Added cross-browser DOM hooks for body.onload and 
            window.resize
          </scm:Note>
        
        </notes>
        
        <path>package
        </path>
        
        <resources>
          <URI>war-js/spiralcraft.js
          </URI>
        </resources>
        
      </scm:Change>

    </detail>
  </scm:Change> 

  <scm:Change>
    <revision>0.4.15
    </revision>

    <authorId>miketoth
    </authorId>
    
    <date>2011-08-10
    </date>
    
    <detail>
      <scm:Change>
      
        <revision>-dev1
        </revision>
        
        
        <notes>
          <scm:Note>Integrate javascript security functions
          </scm:Note>
        
        </notes>
        
        <path>package
        </path>
        
        <resources>
          <URI>war-js/spiralcraft.js
          </URI>
          <URI>war-webui/spiralcraft-jsclient.tgl
          </URI>
        </resources>
        
      </scm:Change>

    </detail>
  </scm:Change> 
  
</scm:Change.list>